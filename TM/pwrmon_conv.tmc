%{
  /* pwrmon_conv.tmc generated by gen_pm.pl */
  const char *PMTO_text[] = { "       ", "Timeout" };
  const char *PMOK_text[] = { "*", " " };
%}
TM typedef unsigned char PMTO { text "%7d" PMTO_text[]; }
TM typedef unsigned char PMOK { text "%2d" PMOK_text[]; }

PMTO PM0TO; invalidate PM0TO;
  { PM0TO = (PM0Stat >> 4) & 1; Validate PM0TO; }
PMOK PM0I1S; invalidate PM0I1S;
  { PM0I1S = (PM0Stat>>0)&1; Validate PM0I1S; }
PMOK PM0V1S; invalidate PM0V1S;
  { PM0V1S = (PM0Stat>>1)&1; Validate PM0V1S; }
PMOK PM0I2S; invalidate PM0I2S;
  { PM0I2S = (PM0Stat>>2)&1; Validate PM0I2S; }
PMOK PM0V2S; invalidate PM0V2S;
  { PM0V2S = (PM0Stat>>3)&1; Validate PM0V2S; }
PMTO PM1TO; invalidate PM1TO;
  { PM1TO = (PM1Stat >> 4) & 1; Validate PM1TO; }

/* Assign PmpsIS, PmpsVS to the appropriate channel:
   I've used channel 1 here:
 */
PMOK PmpsIS; invalidate PmpsIS;
  { PmpsIS = (PM1Stat>>0)&1; Validate PmpsIS; }
PMOK PmpsVS; invalidate PmpsVS;
  { PmpsVS = (PM1Stat>>1)&1; Validate PmpsVS; }
/*
PMOK PmpsIS; invalidate PmpsIS;
  { PmpsIS = (PM1Stat>>2)&1; Validate PmpsIS; }
PMOK PmpsVS; invalidate PmpsVS;
  { PmpsVS = (PM1Stat>>3)&1; Validate PmpsVS; }
*/
